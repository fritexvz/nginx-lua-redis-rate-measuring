events {
  worker_connections 1024;
}

error_log stderr;

http {
  resolver 127.0.0.11 ipv6=off;

  lua_package_path "/usr/local/openresty/luajit/share/lua/5.1/?.lua;/lua/src/?.lua";
  lua_package_cpath "/usr/local/openresty/luajit/lib/lua/5.1/?.so;";

  lua_shared_dict redis_cluster_slot_locks 100k;

  init_by_lua_block {
    config = {
      name = "redis-cluster",
      serv_list = {
        { ip = "redis_cluster", port = 7000 },
      },
      keepalive_timeout = 60000,
      keepalive_cons = 1000,
      connection_timout = 1000,
      max_redirection = 5,
    }

    redis_cluster = require "resty-redis-cluster"
    redis_rate = require "resty-redis-rate"
  }

  server {
    listen 8080;

    location /lua_content {
      default_type 'text/plain';
      # you probably want to use the https://github.com/openresty/lua-nginx-module#access_by_lua phase
      content_by_lua_block {
        local redis_client = redis_cluster:new(config)
        local rate, err = redis_rate.measure(redis_client, ngx.var.arg_token)
        if err then
            ngx.log(ngx.ERR, "err: ", err)
            ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
        end

        if rate > 10 then
            ngx.exit(ngx.HTTP_FORBIDDEN)
        end

        ngx.say(rate)
      }
    }
  }
}
